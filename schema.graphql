type IpsAccount @entity {
  id: ID! # This is required, even if useless
  account: Account!
  ips: Ips!
  tokenBalance: BigInt
}

type Account @entity {
  "Account address"
  id: ID!

  accountId: String

  "IP sets this account has some level of access to via ownership or sub tokens"
  ipSets: [IpsAccount!] @derivedFrom(field: "account")
}

type Ips @entity {
  "IP set ID"
  id: ID!

  "Account ID of the IP set"
  accountId: String

  accounts: [IpsAccount!]! @derivedFrom(field: "ips")
}




# type Account @entity {
#   id: ID! #Account address
#   workReports: [WorkReport] @derivedFrom(field: "account")
#   joinGroups: [JoinGroup] @derivedFrom(field: "member")
#   storageOrders: [StorageOrder] @derivedFrom (field: "account")
# }

# type WorkReport @entity {
#   id: ID! #event id
#   account: Account!
#   addedFiles: [[String]]
#   deletedFiles: [[String]]
#   extrinsicId: String
#   createdAt: DateTime!
#   blockHash: String!
#   blockNum: Int!
# }

# type JoinGroup @entity {
#   id: ID!
#   member: Account!
#   owner: String!
#   extrinsicId: String
#   createdAt: DateTime!
#   blockHash: String!
#   blockNum: Int!
# }

# type StorageOrder @entity {
#   id: ID!
#   account: Account!
#   fileCid: String!
#   extrinsicId: String
#   createdAt: DateTime!
#   blockHash: String!
#   blockNum: Int!
# }